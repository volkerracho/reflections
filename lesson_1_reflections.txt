How did viewing a diff between two versions of a file help you see the bug that was introduced?
Wasnt easy to spot before, so helped a lot.
How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Not sure.
What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?
Pros: Only sulbstantially changed versions are saved and the versions are thus easier to read, cons: you might forget to save and lose progress.
Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
The option to track changes in interrelated files makes sense in a lot of situations - though not in all. Google docs might sacrifice this advantage in favour of simplicity.
How can you use the commands git log and git diff to view the history of files?
Logs gives out the list of all commits saved down to a project. Diffs lets you check the specific changes done in such a commit.
How might using version control make you more confident to make changes that could break something?
There is always an easy way to get back to any version before bugs are introduced, and equally easy to find the exact lines of code that cause the bugs.
Now that you have your workspace set up, what do you want to try using Git for?
For future projects, not sure which.
